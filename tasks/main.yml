# vim: set ft=ansible:

- name: Create Consul Data Directory
  file: name="{{ _consul.data_dir }}" state=directory owner="{{ _consul.user|default("consul") }}" group="root" mode="0755"

- name: Create Consul Defaults File
  template: src="etc/default/consul.j2" dest="/etc/default/{{ _consul.service_name }}" owner="root" group="root" mode="0755"

- name: Create Consul Configuration Files ... Main
  template: src="etc/consul.d/{{ item }}.j2" dest="{{ _consul.config_dir }}/{{ item }}" owner="root" group="{{ _consul.group|default("consul") }}" mode="0640"
  with_items:
    - "main.json"

- name: Create Consul Configuration Files ... Gossip Encryption
  template: src="etc/consul.d/{{ item }}.j2" dest="{{ _consul.config_dir }}/{{ item }}" owner="root" group="{{ _consul.group|default("consul") }}" mode="0640"
  with_items:
    - "gossip-encrypt.json"
  when: _consul.crypto is defined and _consul.crypto.gossip is defined

- block:
    - name: Create Consul TLS Key
      copy: content="{{ _consul.crypto.tls.key_file.content_b64|b64decode }}" dest="{{ _consul.config_dir }}/{{ _consul.crypto.tls.key_file.name }}" mode="0640" owner="root" group="{{ _consul.group|default("consul") }}"
      when: _consul.crypto.tls.key_file.content_b64 is defined

    - name: Copy Consul TLS Key
      copy: src="etc/consul.d/{{ _consul.crypto.tls.key_file.name }}" dest="{{ _consul.config_dir }}/{{ _consul.crypto.tls.key_file.name }}" mode="0640" owner="root" group="{{ _consul.group|default("consul") }}"
      when: _consul.crypto.tls.key_file.content_b64 is not defined

    - name: Copy Consul TLS Certificate
      copy: src="etc/consul.d/{{ _consul.crypto.tls.cert_file }}" dest="{{ _consul.config_dir }}/{{ _consul.crypto.tls.cert_file }}" mode="0644" owner="root" group="{{ _consul.group|default("consul") }}"

    - name: Create Consul Configuration Files ... TLS
      template: src="etc/consul.d/{{ item }}.j2" dest="{{ _consul.config_dir }}/{{ item }}" owner="root" group="{{ _consul.group|default("consul") }}" mode="0640"
      with_items:
        - "tls.json"

    - name: Add certificate location to glob file
      lineinfile: dest="{{ _consul.crypto.tls.cert_glob_file }}" owner=root group=root mode=0644 create=yes line="{{ _consul.config_dir }}/{{ _consul.crypto.tls.cert_file }}"
      when: _consul.crypto.tls.cert_glob_file is defined

  when: _consul.crypto is defined and _consul.crypto.tls is defined

- name: Create Consul Services Configuration
  template: src="etc/consul.d/services.json.j2" dest="{{ _consul.config_dir }}/services.json" owner="root" group="{{ _consul.group|default("consul") }}" mode="0640"
  when: _consul.services is defined

- name: Create Consul Checks Configuration
  template: src="etc/consul.d/checks.json.j2" dest="{{ _consul.config_dir }}/checks.json" owner="root" group="{{ _consul.group|default("consul") }}" mode="0640"
  when: _consul.checks is defined

- block:
    - name: Create dnsmasq config to forward consul domain to agent
      template: src="{{ item }}.j2" dest="/{{ item }}" mode=0644
      with_items:
        - "etc/dnsmasq.d/consul-forward.conf"
      register: dnsmasq_consul

    - name: Restart dnsmasq if config changed to enable consul queries
      service: name=dnsmasq state=restarted
      when: dnsmasq_consul is changed and _consul.allow_dnsmasq_restart|default(true)

  when: _consul.use_dnsmasq_forwarding|default(false)

- block:
    - name: Set oom score for consul client in upstart
      lineinfile:
        dest: "/etc/init/{{ _consul.service_name }}.conf"
        state: present
        regexp: '^oom score'
        line: "oom score {{ _consul.oom_score_adj }}"
  when: _consul.oom_score_adj is defined and ansible_service_mgr == "upstart"

- block:
    - name: Set oom score for consul client in systemd
      lineinfile:
        dest: "/etc/systemd/system/{{ _consul.service_name }}.service"
        state: present
        regexp: '^OOMScoreAdjust='
        line: "OOMScoreAdjust={{ _consul.oom_score_adj }}"
        insertafter: "^[Service]"
  when: _consul.oom_score_adj is defined and ansible_service_mgr == "systemd"
