# vim: set ft=ansible:

- name: Create Consul Data Directory
  ansible.builtin.file:
    name: "{{ _consul.data_dir }}"
    state: directory
    owner: '{{ _consul.user | default("consul") }}'
    group: "root"
    mode: "0755"

- name: Create Consul env File
  ansible.builtin.template:
    src: "etc/consul.d/{{ item }}.j2"
    dest: "{{ _consul.config_dir }}/{{ item }}"
    owner: "root"
    group: "root"
    mode: "0755"
  with_items:
    - "consul.env"

- name: Create Consul Configuration Files ... Main
  ansible.builtin.template:
    src: "etc/consul.d/{{ item }}.j2"
    dest: "{{ _consul.config_dir }}/{{ item }}"
    owner: "root"
    group: '{{ _consul.group | default("consul") }}'
    mode: "0640"
  with_items:
    - "main.json"

- name: Create Consul Configuration Files ... Gossip Encryption
  ansible.builtin.template:
    src: "etc/consul.d/{{ item }}.j2"
    dest: "{{ _consul.config_dir }}/{{ item }}"
    owner: "root"
    group: '{{ _consul.group | default("consul") }}'
    mode: "0640"
  with_items:
    - "gossip-encrypt.json"
  when: _consul.crypto is defined and _consul.crypto.gossip is defined

- name: Configure Consul crypto
  when: _consul.crypto is defined and _consul.crypto.tls is defined
  block:
    - name: Create Consul TLS Key
      ansible.builtin.copy:
        content: "{{ _consul.crypto.tls.key_file.content_b64 | b64decode }}"
        dest: "{{ _consul.config_dir }}/{{ _consul.crypto.tls.key_file.name }}"
        mode: "0640"
        owner: "root"
        group: '{{ _consul.group | default("consul") }}'
      when: _consul.crypto.tls.key_file.content_b64 is defined

    - name: Copy Consul TLS Key
      ansible.builtin.copy:
        src: "etc/consul.d/{{ _consul.crypto.tls.key_file.name }}"
        dest: "{{ _consul.config_dir }}/{{ _consul.crypto.tls.key_file.name }}"
        mode: "0640"
        owner: "root"
        group: '{{ _consul.group | default("consul") }}'
      when: _consul.crypto.tls.key_file.content_b64 is not defined

    - name: Copy Consul TLS Certificate
      ansible.builtin.copy:
        src: "etc/consul.d/{{ _consul.crypto.tls.cert_file }}"
        dest: "{{ _consul.config_dir }}/{{ _consul.crypto.tls.cert_file }}"
        mode: "0644"
        owner: "root"
        group: '{{ _consul.group | default("consul") }}'

    - name: Create Consul Configuration Files ... TLS
      ansible.builtin.template:
        src: "etc/consul.d/{{ item }}.j2"
        dest: "{{ _consul.config_dir }}/{{ item }}"
        owner: "root"
        group: '{{ _consul.group | default("consul") }}'
        mode: "0640"
      with_items:
        - "tls.json"

    - name: Add certificate location to glob file
      ansible.builtin.lineinfile:
        dest: "{{ _consul.crypto.tls.cert_glob_file }}"
        owner: root
        group: root
        mode: 0644
        create: yes
        line: "{{ _consul.config_dir }}/{{ _consul.crypto.tls.cert_file }}"
      when: _consul.crypto.tls.cert_glob_file is defined

- name: Create Consul Services Configuration
  ansible.builtin.template:
    src: "etc/consul.d/services.json.j2"
    dest: "{{ _consul.config_dir }}/services.json"
    owner: "root"
    group: '{{ _consul.group | default("consul") }}'
    mode: "0640"
  when: _consul.services is defined

- name: Create Consul Checks Configuration
  ansible.builtin.template:
    src: "etc/consul.d/checks.json.j2"
    dest: "{{ _consul.config_dir }}/checks.json"
    owner: "root"
    group: '{{ _consul.group | default("consul") }}'
    mode: "0640"
  when: _consul.checks is defined

- name: Systemd-resolved forwarding
  when: _consul.use_dns_forwarding | default(false)
  block:
    - name: Create /etc/systemd/resolved.conf.d/
      ansible.builtin.file:
        path: /etc/systemd/resolved.conf.d/
        state: directory
        owner: root
        group: root

    - name: Create systemd-resolved config to forward consul domain to agent
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: /{{ item }}
        mode: "0644"
      loop:
        - etc/systemd/resolved.conf.d/consul.conf
      register: systemd_resolved_consul

    - name: Restart systemd-resolved
      ansible.builtin.systemd:
        name: systemd-resolved
        state: restarted
      when: systemd_resolved_consul is changed and _consul.allow_resolver_restart | default(true)

- name: Set oom score for consul client in systemd
  ansible.builtin.lineinfile:
    dest: "/etc/systemd/system/{{ _consul.service_name }}.service"
    state: present
    regexp: '^OOMScoreAdjust='
    line: "OOMScoreAdjust={{ _consul.oom_score_adj }}"
    insertafter: "^[Service]"
  when: _consul.oom_score_adj is defined
  notify:
    - Reload SystemD configs
